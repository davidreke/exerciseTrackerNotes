1. Create a backend folder
2. run npm initi inside the backend folder
3. yes to all defaults
4. $npm install express cors mongoose dotenv
- cors = cross origin resource sharing - now we can easily access something outside of our server
5. npm install -g nodemon (if you don't have it already)
6. create server.js
7.Create .env file in backend
8. Build Models
9. Routes
    A. Add to server.js
    B. Build routes
10. Insomnia
    A. Post => JSON => http://localhost:5000/users/add =>{ "username":"David"}
    B. Send => JSON =>  http://localhost:5000/users/  /should return users/
    C. check mongoDB
    D. Post => JSON =>  http://localhost:5000/exercises/add =>
    {
	"username": "david",
	"description": "biking",
	"duration": 300,
	"date": "2019-05-29T02:22:49.0522"
    }
    repeat with
    {
	"username": "david",
	"description": "pushups",
	"duration": 3,
	"date": "2019-05-29T02:22:49.0522"
    }
    E.  Get => http://localhost:5000/exercises/
    F. Check Atlas.

11. Finish exercise routes

12. test your new routes
    A. Get => http://localhost:5000/exercises/
    B. Get => http://localhost:5000/exercises/${id}
    C. DELETE => http://localhost:5000/exercises/${id}
    
---------- Finish Back End ----------

----------Start Front End ----------
1.delete comments from html and change title
2. remove index.css and serviceworker from index.js
3. remove logo, extra jsx, and app.css from app.js
4. npm install bootstrap
5. create app.js and build out
6. Create components folder and put create-exercise, create-user, edit-exercise, exercises-list and navbar components
7. Build out navbar component
8. Build create-exercise component && npm install react-datepicker
9. Build create-user
10. connect back end to front end
a. npm install axios
b. import axios on the create user and then implement axios
c. import axios on the create exercise and then implement axios
11. Build exercise list component
12. Add exercise component to exercise list component
13. Build edit-exercise component
